---
title: "VACT"
subtitle: "Visual Analytics in Clinical Trials"
format: revealjs
editor: visual
server: shiny 
---

## Visual Analytics in Pre-Market Clinical Trials

An interactive review of how visual analytics is used for data exploration in pre-market clinical trials

![](~/Desktop/GitHub/DVCT/DVCT2/Images/MITTR-MedidataCover1200.jpeg)

## Course Content

-   Types of data collected in Clinical Trials

-   Various Techniques for Visualizing types of Data

-   Interactive data exploration examples

## Clinical Trial Data (CHris)

-Data flow/utility in clinical trials(premarket activites)

## Types of Data

-Categorical

-Continuous

## Patient Counts for AE's {.smaller .scrollable transition="slide"}

::: panel-tabset
### BarChart

```{r}
#| echo: false
library(haven)
library(ggplot2)
# Read the .xpt file
adae <- read_xpt("data/adae.xpt")
# Example plot: Distribution of a variable (replace 'AESEV' with a relevant variable in adae)
ggplot(adae, aes(x = AESEV)) +
  geom_bar() +
  theme_minimal() +
  labs(title = "Distribution of Adverse Event Severity",
       x = "Severity",
       y = "Count")
```

### Barchart(Vertical)

```{r}
#| echo: false
library(haven)
library(ggplot2)

# Read the .xpt file
adae <- read_xpt("data/adae.xpt")

# Example plot: Distribution of a variable (replace 'AESEV' with a relevant variable in adae)
ggplot(adae, aes(x = AESEV)) +
  geom_bar() +
  coord_flip() +
  theme_minimal() +
  labs(title = "Distribution of Adverse Event Severity",
       x = "Count",
       y = "Severity")
```
:::

::: footer
Learn more: [Tabsets](https://quarto.org/docs/presentations/revealjs/#tabsets)
:::

## Who is in my study (subdivisions)

## Changes over time

## Correlations (Mixed variable)

## AE

```{r}
#| context: setup 
# Load necessary libraries
library(shiny)
library(random.cdisc.data)
library(dplyr)
library(ggplot2)  # Load viridisLite for a better color palette

# Generate adsl and adae data frames

adsl <- radsl(N = 10, study_duration = 2, seed = 1)

adae <- radae(adsl, seed = 2)

# Check the structure of the datasets to ensure 'TRTEMFL' exists
# str(adsl)
# str(adae)

```

```{r}
#| panel: sidebar
selectInput("dataset", "Choose a dataset:", choices = c("ADSL", "ADAE"))
selectInput("trtemfl", "Choose a TRTEMFL:", choices = c("Y", "N"))
checkboxGroupInput("region1", "REGION1:", choices = c("Asia", "Eurasia", "North America", "South America"), selected = "Asia")
checkboxGroupInput("siteid", "SITEID:", choices = c("BRA-1", "BRA-9", "CHN-11", "CHN-3", "RUS-1", "USA-13"), selected = "BRA-1")
checkboxGroupInput("demographics", "Demographics:", choices = c("Sex", "Race"), selected = c("Sex", "Race"))
```

```{r}
#| panel: fill
plotOutput("barplot")
#h1("Hello World")
```

```{r}
#| context: server
# Define server logic
datasetInput <- reactive({
  switch(input$dataset,
         "ADSL" = adsl,
         "ADAE" = adae)
})

output$barplot <- renderPlot({
  data <- datasetInput()
  if (input$dataset == "ADAE") {
# Filter data based on input selections
    filtered_data <- data %>%
      filter(TRTEMFL == input$trtemfl,
             REGION1 %in% input$region1,
             SITEID %in% input$siteid)
    # Calculate AETERM frequency by ARM
    data_summary <- filtered_data %>%
      group_by(ARM, AETERM) %>%
      summarise(Frequency = n()) %>%
      ungroup()
    # Create bar chart
    ggplot(data_summary, aes(x = AETERM, y = Frequency, fill = ARM)) +

      geom_bar(stat = "identity", position = position_dodge()) +

      labs(title = "Clinical Trial Data", x = "Adverse Event Term (AETERM)", y = "Frequency") +

      theme_minimal()

  } else {
    # If ADSL is selected, show a message
     ggplot() +
      annotate("text", x = 1, y = 1, label = "Select ADAE dataset to view the bar chart", size = 6) +
      theme_void()
  }
})
```
